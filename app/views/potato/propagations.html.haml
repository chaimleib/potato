/ - now = Time.now
/ - def jira_link(key)
/   - return nil if key.nil?
/   - uri = "#{@context[:jira_issue_uri_base]}/#{key}"
/   - link_to key, uri

- def propagations_path(user)
  - return nil unless user.present?
  - base_uri = controller.potato_propagations_path
  - escaped_user = CGI.escape user
  - "#{base_uri}?utf8=%E2%9C%93&user=#{escaped_user}"

#selection_form_container
  = form_tag(controller.potato_propagations_path, method: 'get') do
    %table
      %tbody
        %tr
          %td
            %label{:for => 'user'} Username:
            %input{:type => 'text', 
              :name => 'user', 
              :value => session[:viewed_user]}
        - if (errs = @context[:errors]) && (errs = errs[:user])
          %tr
            %td{class: ['red', 'strong']}
              %ul
                - errs.each do |err|
                  %li= err

#propagations
  %table.table.table-condensed.pretty{'data-url' => propagations_path(@context[:user]),
    'data-sort-name' => 'due',
    'data-sort-order' => 'asc'}
    %thead
      %tr
        %th{'data-field' => 'user',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.propagations.user'}
          User
        %th{'data-field' => 'due',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.common.relDueDate'}
          Due
        %th{'data-field' => 'key',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.common.jiraIssue'}
          Propagation
        %th{'data-field' => 'status', 'data-sortable' => 'true'}
          Status
        %th{'data-field' => 'target',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.propagations.targetVersion'}
          Target
        %th{'data-field' => 'prs',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.common.prs'}
          PR#
        %th.left-col-border{'data-field' => 'parent',
          'data-sortable' => 'true',
          'data-formatter' => 'potato.formatters.common.jiraIssue'}
          Parent
        %th{'data-field' => 'parent_status', 'data-sortable' => 'true'}
          Parent Status
        %th{'data-field' => 'parent_target', 'data-sortable' => 'true'}
          Parent Target
    %tbody
